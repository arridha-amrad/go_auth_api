// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/jwt_service.go
//
// Generated by this command:
//
//	mockgen -source=internal/services/jwt_service.go -destination=internal/mocks/mock_services/mock_jwt_service.go -package=mockservices
//

// Package mockservices is a generated GoMock package.
package mockservices

import (
	services "my-go-api/internal/services"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIJwtService is a mock of IJwtService interface.
type MockIJwtService struct {
	ctrl     *gomock.Controller
	recorder *MockIJwtServiceMockRecorder
	isgomock struct{}
}

// MockIJwtServiceMockRecorder is the mock recorder for MockIJwtService.
type MockIJwtServiceMockRecorder struct {
	mock *MockIJwtService
}

// NewMockIJwtService creates a new mock instance.
func NewMockIJwtService(ctrl *gomock.Controller) *MockIJwtService {
	mock := &MockIJwtService{ctrl: ctrl}
	mock.recorder = &MockIJwtServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJwtService) EXPECT() *MockIJwtServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIJwtService) Create(arg0 services.JWTPayload) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIJwtServiceMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIJwtService)(nil).Create), arg0)
}

// Verify mocks base method.
func (m *MockIJwtService) Verify(tokenString string) (services.JWTPayload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", tokenString)
	ret0, _ := ret[0].(services.JWTPayload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockIJwtServiceMockRecorder) Verify(tokenString any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockIJwtService)(nil).Verify), tokenString)
}
