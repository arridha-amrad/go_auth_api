// Code generated by mockery. DO NOT EDIT.

package services

import mock "github.com/stretchr/testify/mock"

// MockIRedisService is an autogenerated mock type for the IRedisService type
type MockIRedisService struct {
	mock.Mock
}

type MockIRedisService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIRedisService) EXPECT() *MockIRedisService_Expecter {
	return &MockIRedisService_Expecter{mock: &_m.Mock}
}

// DeleteAccessToken provides a mock function with given fields: jti
func (_m *MockIRedisService) DeleteAccessToken(jti string) error {
	ret := _m.Called(jti)

	if len(ret) == 0 {
		panic("no return value specified for DeleteAccessToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(jti)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIRedisService_DeleteAccessToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAccessToken'
type MockIRedisService_DeleteAccessToken_Call struct {
	*mock.Call
}

// DeleteAccessToken is a helper method to define mock.On call
//   - jti string
func (_e *MockIRedisService_Expecter) DeleteAccessToken(jti interface{}) *MockIRedisService_DeleteAccessToken_Call {
	return &MockIRedisService_DeleteAccessToken_Call{Call: _e.mock.On("DeleteAccessToken", jti)}
}

func (_c *MockIRedisService_DeleteAccessToken_Call) Run(run func(jti string)) *MockIRedisService_DeleteAccessToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIRedisService_DeleteAccessToken_Call) Return(_a0 error) *MockIRedisService_DeleteAccessToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRedisService_DeleteAccessToken_Call) RunAndReturn(run func(string) error) *MockIRedisService_DeleteAccessToken_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteRefreshToken provides a mock function with given fields: hashedToken
func (_m *MockIRedisService) DeleteRefreshToken(hashedToken string) error {
	ret := _m.Called(hashedToken)

	if len(ret) == 0 {
		panic("no return value specified for DeleteRefreshToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(hashedToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIRedisService_DeleteRefreshToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteRefreshToken'
type MockIRedisService_DeleteRefreshToken_Call struct {
	*mock.Call
}

// DeleteRefreshToken is a helper method to define mock.On call
//   - hashedToken string
func (_e *MockIRedisService_Expecter) DeleteRefreshToken(hashedToken interface{}) *MockIRedisService_DeleteRefreshToken_Call {
	return &MockIRedisService_DeleteRefreshToken_Call{Call: _e.mock.On("DeleteRefreshToken", hashedToken)}
}

func (_c *MockIRedisService_DeleteRefreshToken_Call) Run(run func(hashedToken string)) *MockIRedisService_DeleteRefreshToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIRedisService_DeleteRefreshToken_Call) Return(_a0 error) *MockIRedisService_DeleteRefreshToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRedisService_DeleteRefreshToken_Call) RunAndReturn(run func(string) error) *MockIRedisService_DeleteRefreshToken_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteVerificationToken provides a mock function with given fields: hashedToken
func (_m *MockIRedisService) DeleteVerificationToken(hashedToken string) error {
	ret := _m.Called(hashedToken)

	if len(ret) == 0 {
		panic("no return value specified for DeleteVerificationToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(hashedToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIRedisService_DeleteVerificationToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteVerificationToken'
type MockIRedisService_DeleteVerificationToken_Call struct {
	*mock.Call
}

// DeleteVerificationToken is a helper method to define mock.On call
//   - hashedToken string
func (_e *MockIRedisService_Expecter) DeleteVerificationToken(hashedToken interface{}) *MockIRedisService_DeleteVerificationToken_Call {
	return &MockIRedisService_DeleteVerificationToken_Call{Call: _e.mock.On("DeleteVerificationToken", hashedToken)}
}

func (_c *MockIRedisService_DeleteVerificationToken_Call) Run(run func(hashedToken string)) *MockIRedisService_DeleteVerificationToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIRedisService_DeleteVerificationToken_Call) Return(_a0 error) *MockIRedisService_DeleteVerificationToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRedisService_DeleteVerificationToken_Call) RunAndReturn(run func(string) error) *MockIRedisService_DeleteVerificationToken_Call {
	_c.Call.Return(run)
	return _c
}

// GetAccessToken provides a mock function with given fields: jti
func (_m *MockIRedisService) GetAccessToken(jti string) (AccessTokenData, error) {
	ret := _m.Called(jti)

	if len(ret) == 0 {
		panic("no return value specified for GetAccessToken")
	}

	var r0 AccessTokenData
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (AccessTokenData, error)); ok {
		return rf(jti)
	}
	if rf, ok := ret.Get(0).(func(string) AccessTokenData); ok {
		r0 = rf(jti)
	} else {
		r0 = ret.Get(0).(AccessTokenData)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(jti)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIRedisService_GetAccessToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAccessToken'
type MockIRedisService_GetAccessToken_Call struct {
	*mock.Call
}

// GetAccessToken is a helper method to define mock.On call
//   - jti string
func (_e *MockIRedisService_Expecter) GetAccessToken(jti interface{}) *MockIRedisService_GetAccessToken_Call {
	return &MockIRedisService_GetAccessToken_Call{Call: _e.mock.On("GetAccessToken", jti)}
}

func (_c *MockIRedisService_GetAccessToken_Call) Run(run func(jti string)) *MockIRedisService_GetAccessToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIRedisService_GetAccessToken_Call) Return(_a0 AccessTokenData, _a1 error) *MockIRedisService_GetAccessToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIRedisService_GetAccessToken_Call) RunAndReturn(run func(string) (AccessTokenData, error)) *MockIRedisService_GetAccessToken_Call {
	_c.Call.Return(run)
	return _c
}

// GetRefreshToken provides a mock function with given fields: hashedToken
func (_m *MockIRedisService) GetRefreshToken(hashedToken string) (RefreshTokenData, error) {
	ret := _m.Called(hashedToken)

	if len(ret) == 0 {
		panic("no return value specified for GetRefreshToken")
	}

	var r0 RefreshTokenData
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (RefreshTokenData, error)); ok {
		return rf(hashedToken)
	}
	if rf, ok := ret.Get(0).(func(string) RefreshTokenData); ok {
		r0 = rf(hashedToken)
	} else {
		r0 = ret.Get(0).(RefreshTokenData)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hashedToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIRedisService_GetRefreshToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetRefreshToken'
type MockIRedisService_GetRefreshToken_Call struct {
	*mock.Call
}

// GetRefreshToken is a helper method to define mock.On call
//   - hashedToken string
func (_e *MockIRedisService_Expecter) GetRefreshToken(hashedToken interface{}) *MockIRedisService_GetRefreshToken_Call {
	return &MockIRedisService_GetRefreshToken_Call{Call: _e.mock.On("GetRefreshToken", hashedToken)}
}

func (_c *MockIRedisService_GetRefreshToken_Call) Run(run func(hashedToken string)) *MockIRedisService_GetRefreshToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIRedisService_GetRefreshToken_Call) Return(_a0 RefreshTokenData, _a1 error) *MockIRedisService_GetRefreshToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIRedisService_GetRefreshToken_Call) RunAndReturn(run func(string) (RefreshTokenData, error)) *MockIRedisService_GetRefreshToken_Call {
	_c.Call.Return(run)
	return _c
}

// GetVerificationToken provides a mock function with given fields: hashedToken
func (_m *MockIRedisService) GetVerificationToken(hashedToken string) (VerificationData, error) {
	ret := _m.Called(hashedToken)

	if len(ret) == 0 {
		panic("no return value specified for GetVerificationToken")
	}

	var r0 VerificationData
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (VerificationData, error)); ok {
		return rf(hashedToken)
	}
	if rf, ok := ret.Get(0).(func(string) VerificationData); ok {
		r0 = rf(hashedToken)
	} else {
		r0 = ret.Get(0).(VerificationData)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hashedToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIRedisService_GetVerificationToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetVerificationToken'
type MockIRedisService_GetVerificationToken_Call struct {
	*mock.Call
}

// GetVerificationToken is a helper method to define mock.On call
//   - hashedToken string
func (_e *MockIRedisService_Expecter) GetVerificationToken(hashedToken interface{}) *MockIRedisService_GetVerificationToken_Call {
	return &MockIRedisService_GetVerificationToken_Call{Call: _e.mock.On("GetVerificationToken", hashedToken)}
}

func (_c *MockIRedisService_GetVerificationToken_Call) Run(run func(hashedToken string)) *MockIRedisService_GetVerificationToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIRedisService_GetVerificationToken_Call) Return(_a0 VerificationData, _a1 error) *MockIRedisService_GetVerificationToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIRedisService_GetVerificationToken_Call) RunAndReturn(run func(string) (VerificationData, error)) *MockIRedisService_GetVerificationToken_Call {
	_c.Call.Return(run)
	return _c
}

// SaveAccessToken provides a mock function with given fields: params
func (_m *MockIRedisService) SaveAccessToken(params AccessTokenData) error {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for SaveAccessToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(AccessTokenData) error); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIRedisService_SaveAccessToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveAccessToken'
type MockIRedisService_SaveAccessToken_Call struct {
	*mock.Call
}

// SaveAccessToken is a helper method to define mock.On call
//   - params AccessTokenData
func (_e *MockIRedisService_Expecter) SaveAccessToken(params interface{}) *MockIRedisService_SaveAccessToken_Call {
	return &MockIRedisService_SaveAccessToken_Call{Call: _e.mock.On("SaveAccessToken", params)}
}

func (_c *MockIRedisService_SaveAccessToken_Call) Run(run func(params AccessTokenData)) *MockIRedisService_SaveAccessToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(AccessTokenData))
	})
	return _c
}

func (_c *MockIRedisService_SaveAccessToken_Call) Return(_a0 error) *MockIRedisService_SaveAccessToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRedisService_SaveAccessToken_Call) RunAndReturn(run func(AccessTokenData) error) *MockIRedisService_SaveAccessToken_Call {
	_c.Call.Return(run)
	return _c
}

// SaveRefreshToken provides a mock function with given fields: params
func (_m *MockIRedisService) SaveRefreshToken(params RefreshTokenData) error {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for SaveRefreshToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(RefreshTokenData) error); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIRedisService_SaveRefreshToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveRefreshToken'
type MockIRedisService_SaveRefreshToken_Call struct {
	*mock.Call
}

// SaveRefreshToken is a helper method to define mock.On call
//   - params RefreshTokenData
func (_e *MockIRedisService_Expecter) SaveRefreshToken(params interface{}) *MockIRedisService_SaveRefreshToken_Call {
	return &MockIRedisService_SaveRefreshToken_Call{Call: _e.mock.On("SaveRefreshToken", params)}
}

func (_c *MockIRedisService_SaveRefreshToken_Call) Run(run func(params RefreshTokenData)) *MockIRedisService_SaveRefreshToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(RefreshTokenData))
	})
	return _c
}

func (_c *MockIRedisService_SaveRefreshToken_Call) Return(_a0 error) *MockIRedisService_SaveRefreshToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRedisService_SaveRefreshToken_Call) RunAndReturn(run func(RefreshTokenData) error) *MockIRedisService_SaveRefreshToken_Call {
	_c.Call.Return(run)
	return _c
}

// SaveVerificationToken provides a mock function with given fields: params
func (_m *MockIRedisService) SaveVerificationToken(params VerificationData) error {
	ret := _m.Called(params)

	if len(ret) == 0 {
		panic("no return value specified for SaveVerificationToken")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(VerificationData) error); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIRedisService_SaveVerificationToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveVerificationToken'
type MockIRedisService_SaveVerificationToken_Call struct {
	*mock.Call
}

// SaveVerificationToken is a helper method to define mock.On call
//   - params VerificationData
func (_e *MockIRedisService_Expecter) SaveVerificationToken(params interface{}) *MockIRedisService_SaveVerificationToken_Call {
	return &MockIRedisService_SaveVerificationToken_Call{Call: _e.mock.On("SaveVerificationToken", params)}
}

func (_c *MockIRedisService_SaveVerificationToken_Call) Run(run func(params VerificationData)) *MockIRedisService_SaveVerificationToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(VerificationData))
	})
	return _c
}

func (_c *MockIRedisService_SaveVerificationToken_Call) Return(_a0 error) *MockIRedisService_SaveVerificationToken_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRedisService_SaveVerificationToken_Call) RunAndReturn(run func(VerificationData) error) *MockIRedisService_SaveVerificationToken_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIRedisService creates a new instance of MockIRedisService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIRedisService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIRedisService {
	mock := &MockIRedisService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
